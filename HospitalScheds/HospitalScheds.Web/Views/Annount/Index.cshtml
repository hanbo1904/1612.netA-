
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <div>
        <h2>消息通知</h2><input id="ReleaseContent" type="text" placeholder="请输入名称" />
        <button id="Button1" class="btn btn-primary btn-2g" onclick="getContent()">查询</button>
        <button class="btn btn-primary btn-2g" data-toggle="modal" data-target="#myModal">添加</button>
    </div>
    <!-- 模态框（Modal） -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">消息添加</h4>
                </div>
                <div id="AccountAdd" class="modal-body">
                    <table class="table table-hover">
                        <tr>
                            <td><input type="hidden" id="Id" /></td>
                        </tr>
                        <tr>
                            <td>发布内容</td>
                            <td><input type="text" v-model="s.ReleaseContent" /></td>
                        </tr>
                        <tr>
                            <td>状态</td>
                            <td><input type="text" v-model="s.Status" /></td>
                        </tr>
                        <tr>
                            <td>发布人员</td>
                            <td><input type="text" v-model="s.ReleasePeople" /></td>
                        </tr>
                        <tr>
                            <td>发布时间</td>
                            <td><input type="text" v-model="s.ReleaseTime" /></td>
                        </tr>
                        <tr>
                            <td>读取状态</td>
                            <td><input type="text" v-model="s.ReadStatus" /></td>
                        </tr>
                        <tr>
                            <td>
                                <button v-on:click="AddAccount()"> 添加</button>
                                <button type="button" data-dismiss="modal">
                                    关闭
                                </button>
                            </td>
                            <td> <button v-on:click="Save()"> 修改</button></td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div id="myView">
        <table class="table table-hover">
            <tr>
                <td>序号</td>
                <td>发布内容</td>
                <td>状态</td>
                <td>发布人员</td>
                <td>发布时间</td>
                <td>读取状态</td>
            </tr>
            <tr v-for="item in Announlist" :key="item.ID">
                <td>{{item.ID}}</td>
                <td>{{item.ReleaseContent}}</td>
                <td>{{item.Status}}</td>
                <td>{{item.ReleasePeople}}</td>
                <td>{{item.ReleaseTime}}</td>
                <td>{{item.ReadStatus}}</td>
                <td><a href="#" class="btn btn-primary btn-2g" v-on:click="Delete(item.ID)">删除</a></td>
                <td> <button class="btn btn-primary btn-2g" data-toggle="modal" v-on:click="Upt(item.ID)">修改</button></td>
            </tr>
        </table>
    </div>
</body>
</html>
<script>
    //删除
    var myModel = { Announlist: [] };
    var myViewModel = new Vue({
        el: '#myView',
        data: myModel,
        methods:
        {
            Delete(ID) {
                if (confirm("确认删除吗？")) {
                    alert(ID)
                    this.$http.get('http://localhost:61163/api/Annount/Delete/?ID=' + ID).then(result => {
                        var result = result.body;
                        if (result.code == 200) {

                            alert('删除失败')
                        }
                        else {
                            alert('删除成功')

                            location.reload()
                        }
                    })
                }
            },            
        },
    })
    //显示
    $(function () {
        $.ajax({
            url: "http://localhost:61163/api/Annount/Index",
            type: "get",
            dataType: 'json',
            success: function (result) {
                myView.Announlist = result
            },
            error: function () {
            },
        })
    })
    //添加和修改
    var vm = new Vue({
        el: "#AccountAdd",
        type: "post",
        data: {
            //NID: "",
            //ReleaseContent: "",
            //Status: "",111111111
            //ReleasePeople: "",
            //ReleaseTime: "",
            //ReadStatus: ""
            s: {}
        },
        methods: {
            //添加
            AddAccount: function () {
                axios.post('http://localhost:61163/api/Annount/Add', this.s).then((response) => { alert('添加成功'); location.reload() }).catch(function (response) { alert('失败') })
            },
            //修改
            Save: function () {
                var id = $("#Id").val();
                vm.s.Id = id;
                alert(id)

                axios.post('http://localhost:61163/api/Annount/Update', this.s).then((response) => { alert('修改成功'); }).catch(function (response) { alert('修改失败') })

                location.reload()

            },
        }
    })
</script>